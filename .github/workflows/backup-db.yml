name: Backup DB

concurrency: prod

on:
  push:
    branches: 
      - db-actions
  workflow_dispatch:
  schedule:
    - cron: '20 1 * * *'

jobs:
  backup-db:
    runs-on: [self-hosted, stage]
    environment: Staging # will be production after testing
    steps:
      - name: Set backup name
        run: |
          BACKUP_FILE_NAME=${HOSTNAME}_$(date +%Y-%m-%d_%H-%M-%S)_dump.sql
          echo "backupFileName=$BACKUP_FILE_NAME" >> $GITHUB_ENV
          echo '::set-output backupFileName=$BACKUP_FILE_NAME'

      - name: Dump database
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: docker-compose -f /orbitar/docker-compose.yml exec -T mysql mysqldump --default-character-set=utf8mb4 --single-transaction --add-drop-database --databases orbitar_db activity_db -u root -p$MYSQL_ROOT_PASSWORD > ${{ env.backupFileName }}
      
      - name: Compress database
        env:
          BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
        run: zip -m -P $BACKUP_PASSWORD ${{ env.backupFileName }}.zip ${{ env.backupFileName }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.backupFileName }}